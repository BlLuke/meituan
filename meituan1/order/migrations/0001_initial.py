# Generated by Django 2.1.7 on 2019-03-15 12:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('accountid', models.AutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressid', models.AutoField(db_column='addressID', primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=30, null=True)),
                ('address2', models.CharField(blank=True, max_length=30, null=True)),
                ('address3', models.CharField(blank=True, max_length=30, null=True)),
                ('address4', models.CharField(blank=True, max_length=30, null=True)),
                ('defaultaddr', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=15, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=20, null=True)),
                ('gender', models.IntegerField(blank=True, db_column='GENDER', null=True)),
                ('memership', models.IntegerField(blank=True, null=True)),
                ('accountid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.Account')),
                ('addressid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Address')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('discountid', models.AutoField(primary_key=True, serialize=False)),
                ('discount1', models.CharField(blank=True, max_length=10, null=True)),
                ('discount2', models.CharField(blank=True, max_length=10, null=True)),
                ('discount3', models.CharField(blank=True, max_length=10, null=True)),
                ('discount4', models.CharField(blank=True, max_length=10, null=True)),
                ('discount5', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'discount',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredientid', models.AutoField(primary_key=True, serialize=False)),
                ('ingredientname', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ingredient',
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('keywordsid', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'keywords',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderid', models.AutoField(primary_key=True, serialize=False)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('orderstatus', models.IntegerField(blank=True, null=True)),
                ('ordertime', models.DateTimeField(auto_now=True)),
                ('finishtime', models.DateTimeField(auto_now=True)),
                ('paymethod', models.IntegerField(blank=True, null=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Orderhistory',
            fields=[
                ('historyid', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('customercomment', models.TextField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=1, null=True)),
                ('shipaddress', models.TextField(blank=True, null=True)),
                ('orderid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'db_table': 'orderhistory',
            },
        ),
        migrations.CreateModel(
            name='Orderlist',
            fields=[
                ('orderid', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('orderstatus', models.CharField(blank=True, max_length=1, null=True)),
                ('ordertime', models.DateTimeField(blank=True, null=True)),
                ('finishtime', models.DateTimeField(blank=True, null=True)),
                ('paymentmethod', models.CharField(blank=True, max_length=9, null=True)),
            ],
            options={
                'db_table': 'orderlist',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('pictureid', models.AutoField(primary_key=True, serialize=False)),
                ('image1', models.CharField(blank=True, max_length=60, null=True)),
                ('image2', models.CharField(blank=True, max_length=60, null=True)),
                ('image3', models.CharField(blank=True, max_length=60, null=True)),
                ('image4', models.CharField(blank=True, max_length=60, null=True)),
                ('image5', models.CharField(blank=True, max_length=60, null=True)),
                ('image6', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'picture',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('priorityid', models.AutoField(primary_key=True, serialize=False)),
                ('prioritytype', models.IntegerField()),
                ('ingredientid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Ingredient')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Customer')),
            ],
            options={
                'db_table': 'priority',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('productid', models.AutoField(primary_key=True, serialize=False)),
                ('productname', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('descrition', models.TextField(blank=True, null=True)),
                ('monthflow', models.IntegerField(blank=True, null=True)),
                ('weekflow', models.IntegerField(blank=True, null=True)),
                ('ranks', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductTastetype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('productsid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Products')),
            ],
            options={
                'db_table': 'product_tastetype',
            },
        ),
        migrations.CreateModel(
            name='Producttype',
            fields=[
                ('producttypeid', models.AutoField(primary_key=True, serialize=False)),
                ('typename', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'producttype',
            },
        ),
        migrations.CreateModel(
            name='Purse',
            fields=[
                ('perseid', models.AutoField(db_column='perseID', primary_key=True, serialize=False)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('alipayaccount', models.CharField(blank=True, max_length=20, null=True)),
                ('wechataccount', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Purse',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipeid', models.AutoField(primary_key=True, serialize=False)),
                ('ingredientid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Ingredient')),
                ('productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Products')),
            ],
            options={
                'db_table': 'recipe',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('restaurantid', models.AutoField(primary_key=True, serialize=False)),
                ('smallprofile', models.CharField(blank=True, max_length=60, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('publicregisterid', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=30, null=True)),
                ('province', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('county_district', models.CharField(blank=True, max_length=45, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('workingtime', models.CharField(blank=True, max_length=10, null=True)),
                ('workingstatus', models.IntegerField()),
                ('rankedstar', models.FloatField(blank=True, null=True)),
                ('weekflow', models.IntegerField(blank=True, null=True)),
                ('monthflow', models.IntegerField(blank=True, null=True)),
                ('deliverytype', models.CharField(blank=True, max_length=1, null=True)),
                ('likessum', models.IntegerField(blank=True, null=True)),
                ('deliveryfromprice', models.IntegerField(blank=True, null=True)),
                ('accountid', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, to='order.Account')),
            ],
            options={
                'db_table': 'restaurant',
            },
        ),
        migrations.CreateModel(
            name='SearchRecords',
            fields=[
                ('recordid', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('keywordsid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Keywords')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Customer')),
            ],
            options={
                'db_table': 'search_records',
            },
        ),
        migrations.CreateModel(
            name='Shipper',
            fields=[
                ('shipperid', models.AutoField(db_column='ShipperID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=15, null=True)),
                ('personid', models.IntegerField(blank=True, db_column='PersonID', null=True)),
                ('mobile', models.CharField(blank=True, db_column='Mobile', max_length=15, null=True)),
                ('positionmap', models.CharField(blank=True, db_column='Positionmap', max_length=20, null=True)),
                ('gender', models.IntegerField(blank=True, db_column='Gender', null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('rankedstar', models.IntegerField(blank=True, db_column='Rankedstar', null=True)),
                ('workingstatus', models.IntegerField(blank=True, db_column='WorkingStatus', null=True)),
                ('healthproof', models.CharField(blank=True, db_column='Healthproof', max_length=50, null=True)),
                ('accountid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.Account')),
            ],
            options={
                'db_table': 'Shipper',
            },
        ),
        migrations.CreateModel(
            name='Taste',
            fields=[
                ('tasteid', models.AutoField(primary_key=True, serialize=False)),
                ('tastetype', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'taste',
            },
        ),
        migrations.AddField(
            model_name='producttastetype',
            name='tasteid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Taste'),
        ),
        migrations.AddField(
            model_name='products',
            name='producttypeid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Producttype'),
        ),
        migrations.AddField(
            model_name='products',
            name='restaurantid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Restaurant'),
        ),
        migrations.AddField(
            model_name='picture',
            name='productid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Products'),
        ),
        migrations.AddField(
            model_name='picture',
            name='restaurantid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Restaurant'),
        ),
        migrations.AddField(
            model_name='orderhistory',
            name='productid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Products'),
        ),
        migrations.AddField(
            model_name='orderhistory',
            name='shipperid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Shipper'),
        ),
        migrations.AddField(
            model_name='discount',
            name='restaurantid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Restaurant', unique=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='purseid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Purse'),
        ),
    ]
